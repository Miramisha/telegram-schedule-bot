// services/displaySchedule.js
const { getSchedule, getScheduleByRange } = require('./scheduleService');
const dayjs = require('dayjs');

async function showFullSchedule(ctx) {
  const userId = String(ctx.from.id);
  const schedule = await getSchedule(userId);
  if (!schedule || Object.keys(schedule).length === 0) {
    ctx.reply('–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –ø—É—Å—Ç–æ–µ.');
    return;
  }
  let msg = 'üìã –í–∞—à–µ –ø–æ–ª–Ω–æ–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ:\n\n';
  for (const date in schedule) {
    msg += `${date}: ${schedule[date]}\n`;
  }
  ctx.reply(msg);
}

async function showScheduleWeek(ctx) {
  const userId = String(ctx.from.id);
  const start = dayjs().format('YYYY-MM-DD');
  const end = dayjs().add(7, 'day').format('YYYY-MM-DD');
  const schedule = await getScheduleByRange(userId, start, end);
  if (!schedule || Object.keys(schedule).length === 0) {
    ctx.reply('–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é.');
    return;
  }
  let msg = 'üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –±–ª–∏–∂–∞–π—à—É—é –Ω–µ–¥–µ–ª—é:\n\n';
  for (const date in schedule) {
    msg += `${date}: ${schedule[date]}\n`;
  }
  ctx.reply(msg);
}

// –í–æ—Ç –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ –º–µ—Å—è—Ü
async function showScheduleMonth(ctx) {
  const userId = String(ctx.from.id);
  const start = dayjs().format('YYYY-MM-DD');
  const end = dayjs().add(30, 'day').format('YYYY-MM-DD');
  const schedule = await getScheduleByRange(userId, start, end);
  if (!schedule || Object.keys(schedule).length === 0) {
    ctx.reply('–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –º–µ—Å—è—Ü.');
    return;
  }
  let msg = 'üóì –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –º–µ—Å—è—Ü:\n\n';
  for (const date in schedule) {
    msg += `${date}: ${schedule[date]}\n`;
  }
  ctx.reply(msg);
}

// –ò —Ñ—É–Ω–∫—Ü–∏—è –Ω–∞ –≥–æ–¥
async function showScheduleYear(ctx) {
  const userId = String(ctx.from.id);
  const start = dayjs().format('YYYY-MM-DD');
  const end = dayjs().add(1, 'year').format('YYYY-MM-DD');
  const schedule = await getScheduleByRange(userId, start, end);
  if (!schedule || Object.keys(schedule).length === 0) {
    ctx.reply('–ù–µ—Ç —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ–¥.');
    return;
  }
  let msg = 'üìÜ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–π –≥–æ–¥:\n\n';
  for (const date in schedule) {
    msg += `${date}: ${schedule[date]}\n`;
  }
  ctx.reply(msg);
}

module.exports = {
  showFullSchedule,
  showScheduleWeek,
  showScheduleMonth,
  showScheduleYear,
};
